[{"C:\\Studies\\REACT\\ellocent\\src\\reportWebVitals.js":"1","C:\\Studies\\REACT\\ellocent\\src\\store.js":"2","C:\\Studies\\REACT\\ellocent\\src\\Reducers\\index.js":"3","C:\\Studies\\REACT\\ellocent\\src\\App.js":"4","C:\\Studies\\REACT\\ellocent\\src\\Components\\Appbar.js":"5","C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoForm.js":"6","C:\\Studies\\REACT\\ellocent\\src\\index.js":"7","C:\\Studies\\REACT\\ellocent\\src\\Reducers\\TodoReducers.js":"8","C:\\Studies\\REACT\\ellocent\\src\\Actions\\types.js":"9","C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoList.js":"10","C:\\Studies\\REACT\\ellocent\\src\\Actions\\index.js":"11","C:\\Studies\\REACT\\ellocent\\src\\Components\\updateTodo.js":"12","C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoDetails.js":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":430,"mtime":1606204383210,"results":"16","hashOfConfig":"15"},{"size":176,"mtime":1606223237062,"results":"17","hashOfConfig":"15"},{"size":440,"mtime":1606298545384,"results":"18","hashOfConfig":"15"},{"size":3316,"mtime":1606288670199,"results":"19","hashOfConfig":"15"},{"size":4654,"mtime":1606297075907,"results":"20","hashOfConfig":"15"},{"size":610,"mtime":1606202859858,"results":"21","hashOfConfig":"15"},{"size":1520,"mtime":1606304626164,"results":"22","hashOfConfig":"15"},{"size":242,"mtime":1606284843463,"results":"23","hashOfConfig":"15"},{"size":4777,"mtime":1606304555189,"results":"24","hashOfConfig":"15"},{"size":1246,"mtime":1606287733786,"results":"25","hashOfConfig":"15"},{"size":4738,"mtime":1606297191690,"results":"26","hashOfConfig":"15"},{"size":2021,"mtime":1606303084455,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ziokwv",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Studies\\REACT\\ellocent\\src\\reportWebVitals.js",[],"C:\\Studies\\REACT\\ellocent\\src\\store.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Reducers\\index.js",[],"C:\\Studies\\REACT\\ellocent\\src\\App.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Components\\Appbar.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoForm.js",["56"],"import React, { useState } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport './Styles/TodoForm.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Input, TextareaAutosize, Button } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { uuid } from 'uuidv4';\r\nimport { addTodo } from \"../Actions/index\"\r\nimport { showForm } from \"../Actions/index\"\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nfunction TodoForm() {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [title, settitle] = useState(\"\")\r\n    const [description, setdescription] = useState(\"\")\r\n    const [status, setstatus] = useState('');\r\n    const handleChange = (event) => {\r\n        setstatus(event.target.value);\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const todo = {\r\n            key: uuid(),\r\n            title: title,\r\n            description: description,\r\n            status: status,\r\n            date:selectedDate.toDateString()\r\n        }\r\n\r\n\r\n        dispatch(addTodo(todo))\r\n        dispatch(showForm())\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    return (\r\n        <div className=\"TodoForm\">\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className=\"mainForm\" >\r\n                <form className=\"mainForm__div\" onSubmit={handleSubmit}>\r\n                    <Input placeholder=\"Title\" style={{ width: \"500px\" }} onChange={(e) => settitle(e.target.value)} value={title}></Input>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <TextareaAutosize style={{ width: \"500px\", height: \"300px\", resize: \"none\", padding: \"12px\" }} value={description} onChange={(e) => setdescription(e.target.value)} />\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={status}\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={\"draft\"}>Draft</MenuItem>\r\n                            <MenuItem value={\"pending\"}>Pending</MenuItem>\r\n                            <MenuItem value={\"in-progress\"}>In Progress</MenuItem>\r\n                            <MenuItem value={\"completed\"}>Completed</MenuItem>\r\n                        </Select>\r\n\r\n                        \r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                fullWidth\r\n                                variant=\"inline\"\r\n                                format=\"MM/dd/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Select Due Date\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </FormControl>\r\n                    <div className=\"mainForm__btns\">\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => dispatch(showForm())}>\r\n                            Close\r\n                    </Button>\r\n                    </div>\r\n\r\n                </form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n",["57","58"],"C:\\Studies\\REACT\\ellocent\\src\\index.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Reducers\\TodoReducers.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Actions\\types.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoList.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Actions\\index.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Components\\updateTodo.js",[],"C:\\Studies\\REACT\\ellocent\\src\\Components\\TodoDetails.js",[],{"ruleId":"59","severity":1,"message":"60","line":4,"column":23,"nodeType":"61","messageId":"62","endLine":4,"endColumn":34},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-global-assign","no-unsafe-negation"]